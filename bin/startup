#!/usr/bin/env node

const CronJob = require('cron').CronJob

const log = require('../lib/log')
const registerOrRenewCert = require('../lib/register-or-renew-cert')

const certbotArgs = process.argv.slice(2)
const {DOMAINS, EMAIL, AUTO, CRON_PATTERN, DEVELOPMENT} = process.env

const auto = process.env.AUTO === 'false' ? false : true
const development = DEVELOPMENT === 'true' ? true : false
const defaultCronPattern = '00 00 00 * * *' // every day at midnight
const cronPattern = CRON_PATTERN || defaultCronPattern
const port = 13135

try {
  if (!DOMAINS || !DOMAINS.length) {
    throw new Error('No domains given.')
  }

  if (!EMAIL) {
    throw new Error('No email given.')
  }
} catch(err) {
  log.fatal(err)
  process.exit(1)
}

const domains = DOMAINS.split(',').map(v => v.trim())

const registerOrRenew = () => {
  log.info('Attemping to register or renew certificates.')
  return registerOrRenewCert({
    port,
    staticDir: '/var/www',
    domains,
    email: EMAIL,
    development,
    certbotArgs
  })
  .then(result => log.info(result))
  .catch(err   => log.fatal(err) && process.exit(1))
}

registerOrRenew().then(() => {
  if (auto) {
    log.info('Scheduling renewal job - ' + cronPattern)
    const job = new CronJob(cronPattern, registerOrRenew)
    job.start()
  }
})
